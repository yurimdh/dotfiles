if [[ -x "$(which colorls)" ]]; then
  alias ll="colorls -Ala"
else
  alias ll="ls -FGlahs"
fi

alias -g G='| grep'
alias amend='git commit --amend'
alias be='bundle exec'
alias bu='bundle update'
alias fr='foreman run'
alias fs='foreman start'
alias gp='git push'
alias gpr='git pull --rebase'
alias grc='git rebase --continue'
alias hpr='hub pull-request'
alias hpush='git push heroku'
alias irb='irb --readline -r irb/completion'
alias killruby='killall -9 ruby'
alias pubkey="cat ~/.ssh/id_rsa.pub | pbcopy | printf '=> Public key copied to pasteboard.\n'"
alias rc='rails console'
alias ss='spring stop'
alias tail-logs='heroku logs -t'
alias track='git checkout -t'
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias mux='tmuxinator'
alias download-latest-dump='aws s3 cp s3://qa-env-pg-backups/latest-dump.tar.gz dump.tar.gz'

# Heroku staging
alias staging-console='heroku run console --remote staging'
alias staging-tail='heroku logs --tail --remote staging'

# Heroku production
alias production-console='heroku run console --remote production'
alias production-tail='heroku logs --tail --remote production'

# Heroku databases
alias db-pull-production='development restore production'
alias db-pull-staging='development restore staging'

alias db-backup-production='heroku pgbackups:capture --remote production'
alias db-backups='heroku pgbackups --remote production'
alias db-copy-production-to-staging='heroku pgbackups:restore DATABASE `heroku pgbackups:url --remote production` --remote staging  --confirm `basename $PWD`-staging'

# Docker
alias dm="docker-machine"
alias dc="docker-compose"
alias dcrun="dc run --rm"
alias dcstop="dc stop && dc rm -f"
alias dcrunu="dc run --rm --user=$(id -u)"

# Utils
alias tz="\
printf 'local:\t\t ';\
date;\
printf 'London:\t\t ';\
TZ='Europe/London' date;\
printf 'Sao Paulo:\t ';\
TZ='America/Sao_Paulo' date;\
printf 'New York:\t ';\
TZ='America/New_York' date;\
printf 'San Francisco:\t ';\
TZ='America/Los_Angeles' date;\
"

# Linux
alias dtsync="sudo systemctl stop ntpd.service && sudo ntpdate a.ntp.br && sudo systemctl start ntpd.service"
