 function git-new-remote-tracking {
  git checkout -b $1 && git push -u origin $1
}

function git_branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git-done {
  branch=`git_branch_name`
  killruby ; spring stop ; git checkout master && git merge $branch --ff-only && bundle install && rake db:migrate db:test:prepare && rake && git push && git branch -D $branch && git push origin :$branch
}

function git-nuke {
  git branch -D $1 && git push origin :$1
}
compdef _git git-nuke=git-checkout

# Rebases a branch ($1) with the current branch
function git-on-branch {
  branch=`git_branch_name`
  git checkout $1 && git pull --rebase
  git checkout $branch
  git rebase $1
}

function git-on-master {
  git-on-branch master
}

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

function rrg {
  rake routes | grep $1
}

function take {
  mkdir $1
  cd $1
}

# Allows commit message without typing quotes (can't have quotes in the commit msg though).
function gc {
  git commit -m "$*"
}

# Starts or suspends the dev VM
function vrun {
  vmrun -T fusion $2 "$HOME/Virtual Machines/$1.vmwarevm/$1.vmx" nogui
}

function vm {
  vrun dev-v3 start \
    && (ssh dev || (sleep 20 && ssh dev)) \
    && vrun dev-v3 suspend
}

function vbvm {
  VBoxManage startvm dev --type headless && \
  ssh dev && \
  VBoxManage controlvm dev savestate
}

function vmware-backup {
  vmware_path=/Library/Preferences/VMware\ Fusion
  backup_path="$HOME/Virtual Machines"

  cp "$vmware_path/vmnet1/dhcpd.conf" "$backup_path/vmnet1-dhcpd.conf" && \
  cp "$vmware_path/vmnet8/dhcpd.conf" "$backup_path/vmnet8-dhcpd.conf"
}
